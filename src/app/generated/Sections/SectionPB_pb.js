// source: src/app/Protos/SectionPB.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.SectionPB.SectionList', null, global);
goog.exportSymbol('proto.SectionPB.SectionObject', null, global);
goog.exportSymbol('proto.SectionPB.StatusRepley', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SectionPB.SectionObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SectionPB.SectionObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SectionPB.SectionObject.displayName = 'proto.SectionPB.SectionObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SectionPB.SectionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SectionPB.SectionList.repeatedFields_, null);
};
goog.inherits(proto.SectionPB.SectionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SectionPB.SectionList.displayName = 'proto.SectionPB.SectionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SectionPB.StatusRepley = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SectionPB.StatusRepley, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SectionPB.StatusRepley.displayName = 'proto.SectionPB.StatusRepley';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SectionPB.SectionObject.prototype.toObject = function(opt_includeInstance) {
  return proto.SectionPB.SectionObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SectionPB.SectionObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    lateralid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caseid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    from: jspb.Message.getFieldWithDefault(msg, 3, ""),
    to: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    dimension: jspb.Message.getFieldWithDefault(msg, 6, 0),
    length: jspb.Message.getFieldWithDefault(msg, 7, 0),
    material: jspb.Message.getFieldWithDefault(msg, 8, ""),
    type: jspb.Message.getFieldWithDefault(msg, 9, ""),
    lateral: jspb.Message.getFieldWithDefault(msg, 10, 0),
    fi: jspb.Message.getFieldWithDefault(msg, 11, 0),
    damage: jspb.Message.getFieldWithDefault(msg, 12, 0),
    priority: jspb.Message.getFieldWithDefault(msg, 13, 0),
    rehab: jspb.Message.getFieldWithDefault(msg, 14, 0),
    sectiontype: jspb.Message.getFieldWithDefault(msg, 15, ""),
    system: jspb.Message.getFieldWithDefault(msg, 16, ""),
    position: jspb.Message.getFieldWithDefault(msg, 17, ""),
    description: jspb.Message.getFieldWithDefault(msg, 18, ""),
    date: jspb.Message.getFieldWithDefault(msg, 19, ""),
    reportnumber: jspb.Message.getFieldWithDefault(msg, 20, ""),
    bst: jspb.Message.getFieldWithDefault(msg, 21, ""),
    address: jspb.Message.getFieldWithDefault(msg, 22, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 23, ""),
    cleaned: jspb.Message.getFieldWithDefault(msg, 24, ""),
    weather: jspb.Message.getFieldWithDefault(msg, 25, ""),
    inuse: jspb.Message.getFieldWithDefault(msg, 26, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 27, ""),
    carnumber: jspb.Message.getFieldWithDefault(msg, 28, 0),
    casenumber: jspb.Message.getFieldWithDefault(msg, 29, ""),
    inspectionmethod: jspb.Message.getFieldWithDefault(msg, 30, ""),
    mediaid: jspb.Message.getFieldWithDefault(msg, 31, ""),
    fromtype: jspb.Message.getFieldWithDefault(msg, 32, ""),
    totype: jspb.Message.getFieldWithDefault(msg, 33, ""),
    inspectionreason: jspb.Message.getFieldWithDefault(msg, 34, ""),
    systemdocumentation: jspb.Message.getFieldWithDefault(msg, 35, ""),
    systemmedia: jspb.Message.getFieldWithDefault(msg, 36, ""),
    physicalindex: jspb.Message.getFieldWithDefault(msg, 37, ""),
    amountofplugs: jspb.Message.getFieldWithDefault(msg, 38, 0),
    except: jspb.Message.getFieldWithDefault(msg, 39, ""),
    manholelateral: jspb.Message.getFieldWithDefault(msg, 40, ""),
    prework: jspb.Message.getFieldWithDefault(msg, 41, ""),
    milled: jspb.Message.getFieldWithDefault(msg, 42, ""),
    lateraltypeid: jspb.Message.getFieldWithDefault(msg, 43, 0),
    renovationstatusid: jspb.Message.getFieldWithDefault(msg, 44, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SectionPB.SectionObject}
 */
proto.SectionPB.SectionObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SectionPB.SectionObject;
  return proto.SectionPB.SectionObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SectionPB.SectionObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SectionPB.SectionObject}
 */
proto.SectionPB.SectionObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLateralid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCaseid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTo(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDimension(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLength(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterial(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLateral(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFi(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDamage(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRehab(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setSectiontype(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystem(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setPosition(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportnumber(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setBst(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirection(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setCleaned(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeather(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setInuse(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperator(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarnumber(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setCasenumber(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionmethod(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaid(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromtype(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotype(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionreason(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemdocumentation(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemmedia(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhysicalindex(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountofplugs(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setExcept(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setManholelateral(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrework(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setMilled(value);
      break;
    case 43:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLateraltypeid(value);
      break;
    case 44:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRenovationstatusid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SectionPB.SectionObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SectionPB.SectionObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SectionPB.SectionObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLateralid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCaseid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDimension();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getMaterial();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLateral();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getFi();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getDamage();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getRehab();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getSectiontype();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSystem();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getPosition();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getReportnumber();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getBst();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getDirection();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getCleaned();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getWeather();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getInuse();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getOperator();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getCarnumber();
  if (f !== 0) {
    writer.writeInt32(
      28,
      f
    );
  }
  f = message.getCasenumber();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getInspectionmethod();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getMediaid();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getFromtype();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getTotype();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getInspectionreason();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getSystemdocumentation();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getSystemmedia();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getPhysicalindex();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getAmountofplugs();
  if (f !== 0) {
    writer.writeInt32(
      38,
      f
    );
  }
  f = message.getExcept();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getManholelateral();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getPrework();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getMilled();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
  f = message.getLateraltypeid();
  if (f !== 0) {
    writer.writeInt32(
      43,
      f
    );
  }
  f = message.getRenovationstatusid();
  if (f !== 0) {
    writer.writeInt32(
      44,
      f
    );
  }
};


/**
 * optional int32 lateralID = 1;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getLateralid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setLateralid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 caseID = 2;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getCaseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setCaseid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string from = 3;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string to = 4;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setTo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 dimension = 6;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getDimension = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setDimension = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 length = 7;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setLength = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string material = 8;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getMaterial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setMaterial = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string type = 9;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 lateral = 10;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getLateral = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setLateral = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 fi = 11;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getFi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setFi = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 damage = 12;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getDamage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setDamage = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 priority = 13;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 rehab = 14;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getRehab = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setRehab = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string sectionType = 15;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getSectiontype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSectiontype = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string system = 16;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getSystem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSystem = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string position = 17;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getPosition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setPosition = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string description = 18;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string date = 19;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string reportNumber = 20;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getReportnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setReportnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string bst = 21;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getBst = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setBst = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string address = 22;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string direction = 23;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getDirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setDirection = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string cleaned = 24;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getCleaned = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string weather = 25;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getWeather = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setWeather = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string inuse = 26;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInuse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInuse = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string operator = 27;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getOperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setOperator = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional int32 carNumber = 28;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getCarnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setCarnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional string caseNumber = 29;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getCasenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setCasenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string inspectionMethod = 30;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionmethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionmethod = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string mediaID = 31;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getMediaid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setMediaid = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string fromType = 32;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getFromtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setFromtype = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string toType = 33;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getTotype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setTotype = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string inspectionReason = 34;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionreason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionreason = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string systemDocumentation = 35;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getSystemdocumentation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSystemdocumentation = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional string systemMedia = 36;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getSystemmedia = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSystemmedia = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string physicalIndex = 37;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getPhysicalindex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setPhysicalindex = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional int32 amountOfPlugs = 38;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getAmountofplugs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setAmountofplugs = function(value) {
  return jspb.Message.setProto3IntField(this, 38, value);
};


/**
 * optional string except = 39;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getExcept = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setExcept = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional string manholeLateral = 40;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getManholelateral = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setManholelateral = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional string prework = 41;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getPrework = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setPrework = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional string milled = 42;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getMilled = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setMilled = function(value) {
  return jspb.Message.setProto3StringField(this, 42, value);
};


/**
 * optional int32 lateralTypeID = 43;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getLateraltypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 43, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setLateraltypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 43, value);
};


/**
 * optional int32 renovationStatusID = 44;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getRenovationstatusid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 44, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setRenovationstatusid = function(value) {
  return jspb.Message.setProto3IntField(this, 44, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SectionPB.SectionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SectionPB.SectionList.prototype.toObject = function(opt_includeInstance) {
  return proto.SectionPB.SectionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SectionPB.SectionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    sectionsList: jspb.Message.toObjectList(msg.getSectionsList(),
    proto.SectionPB.SectionObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SectionPB.SectionList}
 */
proto.SectionPB.SectionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SectionPB.SectionList;
  return proto.SectionPB.SectionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SectionPB.SectionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SectionPB.SectionList}
 */
proto.SectionPB.SectionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SectionPB.SectionObject;
      reader.readMessage(value,proto.SectionPB.SectionObject.deserializeBinaryFromReader);
      msg.addSections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SectionPB.SectionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SectionPB.SectionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SectionPB.SectionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SectionPB.SectionObject.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SectionObject sections = 1;
 * @return {!Array<!proto.SectionPB.SectionObject>}
 */
proto.SectionPB.SectionList.prototype.getSectionsList = function() {
  return /** @type{!Array<!proto.SectionPB.SectionObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SectionPB.SectionObject, 1));
};


/**
 * @param {!Array<!proto.SectionPB.SectionObject>} value
 * @return {!proto.SectionPB.SectionList} returns this
*/
proto.SectionPB.SectionList.prototype.setSectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SectionPB.SectionObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SectionPB.SectionObject}
 */
proto.SectionPB.SectionList.prototype.addSections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SectionPB.SectionObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SectionPB.SectionList} returns this
 */
proto.SectionPB.SectionList.prototype.clearSectionsList = function() {
  return this.setSectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SectionPB.StatusRepley.prototype.toObject = function(opt_includeInstance) {
  return proto.SectionPB.StatusRepley.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SectionPB.StatusRepley} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.StatusRepley.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    command: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SectionPB.StatusRepley}
 */
proto.SectionPB.StatusRepley.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SectionPB.StatusRepley;
  return proto.SectionPB.StatusRepley.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SectionPB.StatusRepley} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SectionPB.StatusRepley}
 */
proto.SectionPB.StatusRepley.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SectionPB.StatusRepley.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SectionPB.StatusRepley.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SectionPB.StatusRepley} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.StatusRepley.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommand();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.SectionPB.StatusRepley.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.StatusRepley} returns this
 */
proto.SectionPB.StatusRepley.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 command = 2;
 * @return {number}
 */
proto.SectionPB.StatusRepley.prototype.getCommand = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.StatusRepley} returns this
 */
proto.SectionPB.StatusRepley.prototype.setCommand = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.SectionPB);
