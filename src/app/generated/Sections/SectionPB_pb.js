// source: src/app/Protos/SectionPB.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.SectionPB.SectionFrontList', null, global);
goog.exportSymbol('proto.SectionPB.SectionFrontObject', null, global);
goog.exportSymbol('proto.SectionPB.SectionFrontObject2', null, global);
goog.exportSymbol('proto.SectionPB.SectionInformationList', null, global);
goog.exportSymbol('proto.SectionPB.SectionInformationObject', null, global);
goog.exportSymbol('proto.SectionPB.SectionList', null, global);
goog.exportSymbol('proto.SectionPB.SectionObject', null, global);
goog.exportSymbol('proto.SectionPB.StatusRepley', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SectionPB.SectionObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SectionPB.SectionObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SectionPB.SectionObject.displayName = 'proto.SectionPB.SectionObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SectionPB.SectionFrontObject2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SectionPB.SectionFrontObject2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SectionPB.SectionFrontObject2.displayName = 'proto.SectionPB.SectionFrontObject2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SectionPB.SectionInformationObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SectionPB.SectionInformationObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SectionPB.SectionInformationObject.displayName = 'proto.SectionPB.SectionInformationObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SectionPB.SectionFrontObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SectionPB.SectionFrontObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SectionPB.SectionFrontObject.displayName = 'proto.SectionPB.SectionFrontObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SectionPB.SectionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SectionPB.SectionList.repeatedFields_, null);
};
goog.inherits(proto.SectionPB.SectionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SectionPB.SectionList.displayName = 'proto.SectionPB.SectionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SectionPB.SectionInformationList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SectionPB.SectionInformationList.repeatedFields_, null);
};
goog.inherits(proto.SectionPB.SectionInformationList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SectionPB.SectionInformationList.displayName = 'proto.SectionPB.SectionInformationList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SectionPB.SectionFrontList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SectionPB.SectionFrontList.repeatedFields_, null);
};
goog.inherits(proto.SectionPB.SectionFrontList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SectionPB.SectionFrontList.displayName = 'proto.SectionPB.SectionFrontList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SectionPB.StatusRepley = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SectionPB.StatusRepley, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SectionPB.StatusRepley.displayName = 'proto.SectionPB.StatusRepley';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SectionPB.SectionObject.prototype.toObject = function(opt_includeInstance) {
  return proto.SectionPB.SectionObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SectionPB.SectionObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    sectionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    from: jspb.Message.getFieldWithDefault(msg, 2, 0),
    to: jspb.Message.getFieldWithDefault(msg, 3, 0),
    sId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    sectionnumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    tvOperator: jspb.Message.getFieldWithDefault(msg, 6, ""),
    inspectionDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    inspectionCity: jspb.Message.getFieldWithDefault(msg, 8, ""),
    inspectionAddress: jspb.Message.getFieldWithDefault(msg, 9, ""),
    inspectionWeather: jspb.Message.getFieldWithDefault(msg, 10, ""),
    inspectionSectionnumber: jspb.Message.getFieldWithDefault(msg, 11, 0),
    dimension: jspb.Message.getFieldWithDefault(msg, 12, ""),
    materiale: jspb.Message.getFieldWithDefault(msg, 13, ""),
    lengthMeter: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    yearofestablishment: jspb.Message.getFieldWithDefault(msg, 15, ""),
    inspektionReportnumber: jspb.Message.getFieldWithDefault(msg, 16, ""),
    reportDescription: jspb.Message.getFieldWithDefault(msg, 17, ""),
    inspectionReason: jspb.Message.getFieldWithDefault(msg, 18, ""),
    inspektionCarnumber: jspb.Message.getFieldWithDefault(msg, 19, ""),
    inspektionCamera: jspb.Message.getFieldWithDefault(msg, 20, ""),
    assignmentNumber: jspb.Message.getFieldWithDefault(msg, 21, 0),
    videonumber: jspb.Message.getFieldWithDefault(msg, 22, 0),
    inspectionCleaned: jspb.Message.getFieldWithDefault(msg, 23, ""),
    topointtype: jspb.Message.getFieldWithDefault(msg, 24, ""),
    frompointtype: jspb.Message.getFieldWithDefault(msg, 25, ""),
    inspektionLengthmeasured: jspb.Message.getFloatingPointFieldWithDefault(msg, 26, 0.0),
    inspektionType: jspb.Message.getFieldWithDefault(msg, 27, ""),
    inspectionDifference: jspb.Message.getFloatingPointFieldWithDefault(msg, 28, 0.0),
    inspectionStop1: jspb.Message.getFloatingPointFieldWithDefault(msg, 29, 0.0),
    inspectionDirection: jspb.Message.getFieldWithDefault(msg, 30, ""),
    inspectrionName: jspb.Message.getFieldWithDefault(msg, 31, ""),
    reportDescriptionGeneral: jspb.Message.getFieldWithDefault(msg, 32, ""),
    status: jspb.Message.getFieldWithDefault(msg, 33, ""),
    reportInspectionType: jspb.Message.getFieldWithDefault(msg, 34, ""),
    materialInspection: jspb.Message.getFieldWithDefault(msg, 35, ""),
    dimensionInspection: jspb.Message.getFieldWithDefault(msg, 36, ""),
    inspectionMetodeType: jspb.Message.getFieldWithDefault(msg, 37, ""),
    sectionCode: jspb.Message.getFieldWithDefault(msg, 38, ""),
    medieid: jspb.Message.getFieldWithDefault(msg, 39, ""),
    mediatype: jspb.Message.getFieldWithDefault(msg, 40, ""),
    inspektionDamage: jspb.Message.getFieldWithDefault(msg, 41, ""),
    inspectionStart: jspb.Message.getFieldWithDefault(msg, 42, ""),
    physicalIndex: jspb.Message.getFieldWithDefault(msg, 43, ""),
    drawingcode: jspb.Message.getFieldWithDefault(msg, 44, ""),
    crosssection: jspb.Message.getFieldWithDefault(msg, 45, ""),
    profile: jspb.Message.getFieldWithDefault(msg, 46, ""),
    addressid: jspb.Message.getFieldWithDefault(msg, 47, ""),
    topointaddess: jspb.Message.getFieldWithDefault(msg, 48, ""),
    systemname: jspb.Message.getFieldWithDefault(msg, 49, ""),
    systemage: jspb.Message.getFieldWithDefault(msg, 50, ""),
    systemdocumentation: jspb.Message.getFieldWithDefault(msg, 51, ""),
    systemmedia: jspb.Message.getFieldWithDefault(msg, 52, ""),
    materialeidentified: jspb.Message.getFieldWithDefault(msg, 53, ""),
    inspectionStop2: jspb.Message.getFieldWithDefault(msg, 54, ""),
    reporttype: jspb.Message.getFieldWithDefault(msg, 55, ""),
    inspectionsectionStartpoint: jspb.Message.getFieldWithDefault(msg, 56, ""),
    inspectionsectionEndpoint: jspb.Message.getFieldWithDefault(msg, 57, ""),
    inspectionsectionDistance: jspb.Message.getFloatingPointFieldWithDefault(msg, 58, 0.0),
    inspectionsectionumber: jspb.Message.getFieldWithDefault(msg, 59, 0),
    inspectionlateralclockreference: jspb.Message.getFieldWithDefault(msg, 60, ""),
    inspectionlateralclockreference6: jspb.Message.getFieldWithDefault(msg, 61, ""),
    componentcode: jspb.Message.getFieldWithDefault(msg, 62, ""),
    physicalindexvalue: jspb.Message.getFloatingPointFieldWithDefault(msg, 63, 0.0),
    inspectionDamagevalue: jspb.Message.getFloatingPointFieldWithDefault(msg, 64, 0.0),
    amountofplugs: jspb.Message.getFieldWithDefault(msg, 65, 0),
    group: jspb.Message.getFieldWithDefault(msg, 66, 0),
    excluded: jspb.Message.getBooleanFieldWithDefault(msg, 67, false),
    manholesection: jspb.Message.getBooleanFieldWithDefault(msg, 68, false),
    preparatorywork: jspb.Message.getBooleanFieldWithDefault(msg, 69, false),
    milled: jspb.Message.getBooleanFieldWithDefault(msg, 70, false),
    usercomment: jspb.Message.getFieldWithDefault(msg, 71, ""),
    position: jspb.Message.getFieldWithDefault(msg, 72, 0),
    frommanholeidOrginal: jspb.Message.getFieldWithDefault(msg, 73, 0),
    tomanholeidOrginal: jspb.Message.getFieldWithDefault(msg, 74, 0),
    renovationyear: jspb.Message.getFieldWithDefault(msg, 75, 0),
    choosedeleterow: jspb.Message.getBooleanFieldWithDefault(msg, 76, false),
    sagimportid: jspb.Message.getFieldWithDefault(msg, 77, 0),
    sectionuufk: jspb.Message.getFieldWithDefault(msg, 78, 0),
    stiktypeid: jspb.Message.getFieldWithDefault(msg, 79, 0),
    prioritetid: jspb.Message.getFieldWithDefault(msg, 80, 0),
    renoveringStatusid: jspb.Message.getFieldWithDefault(msg, 81, 0),
    sectionendpointid: jspb.Message.getFieldWithDefault(msg, 82, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SectionPB.SectionObject}
 */
proto.SectionPB.SectionObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SectionPB.SectionObject;
  return proto.SectionPB.SectionObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SectionPB.SectionObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SectionPB.SectionObject}
 */
proto.SectionPB.SectionObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSectionid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSectionnumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTvOperator(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionDate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionCity(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionAddress(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionWeather(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInspectionSectionnumber(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDimension(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMateriale(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLengthMeter(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setYearofestablishment(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspektionReportnumber(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportDescription(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionReason(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspektionCarnumber(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspektionCamera(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAssignmentNumber(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVideonumber(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionCleaned(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopointtype(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrompointtype(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setInspektionLengthmeasured(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspektionType(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setInspectionDifference(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setInspectionStop1(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionDirection(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectrionName(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportDescriptionGeneral(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportInspectionType(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterialInspection(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setDimensionInspection(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionMetodeType(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setSectionCode(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setMedieid(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediatype(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspektionDamage(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionStart(value);
      break;
    case 43:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhysicalIndex(value);
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.setDrawingcode(value);
      break;
    case 45:
      var value = /** @type {string} */ (reader.readString());
      msg.setCrosssection(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfile(value);
      break;
    case 47:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressid(value);
      break;
    case 48:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopointaddess(value);
      break;
    case 49:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemname(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemage(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemdocumentation(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemmedia(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterialeidentified(value);
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionStop2(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.setReporttype(value);
      break;
    case 56:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionsectionStartpoint(value);
      break;
    case 57:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionsectionEndpoint(value);
      break;
    case 58:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setInspectionsectionDistance(value);
      break;
    case 59:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInspectionsectionumber(value);
      break;
    case 60:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionlateralclockreference(value);
      break;
    case 61:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionlateralclockreference6(value);
      break;
    case 62:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentcode(value);
      break;
    case 63:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPhysicalindexvalue(value);
      break;
    case 64:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setInspectionDamagevalue(value);
      break;
    case 65:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountofplugs(value);
      break;
    case 66:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroup(value);
      break;
    case 67:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcluded(value);
      break;
    case 68:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setManholesection(value);
      break;
    case 69:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreparatorywork(value);
      break;
    case 70:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMilled(value);
      break;
    case 71:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsercomment(value);
      break;
    case 72:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosition(value);
      break;
    case 73:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrommanholeidOrginal(value);
      break;
    case 74:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTomanholeidOrginal(value);
      break;
    case 75:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRenovationyear(value);
      break;
    case 76:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChoosedeleterow(value);
      break;
    case 77:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSagimportid(value);
      break;
    case 78:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSectionuufk(value);
      break;
    case 79:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStiktypeid(value);
      break;
    case 80:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrioritetid(value);
      break;
    case 81:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRenoveringStatusid(value);
      break;
    case 82:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSectionendpointid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SectionPB.SectionObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SectionPB.SectionObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SectionPB.SectionObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSectionid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getSectionnumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTvOperator();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getInspectionDate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getInspectionCity();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getInspectionAddress();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getInspectionWeather();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInspectionSectionnumber();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getDimension();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMateriale();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getLengthMeter();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getYearofestablishment();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getInspektionReportnumber();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getReportDescription();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getInspectionReason();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getInspektionCarnumber();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getInspektionCamera();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getAssignmentNumber();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getVideonumber();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getInspectionCleaned();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getTopointtype();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getFrompointtype();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getInspektionLengthmeasured();
  if (f !== 0.0) {
    writer.writeFloat(
      26,
      f
    );
  }
  f = message.getInspektionType();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getInspectionDifference();
  if (f !== 0.0) {
    writer.writeFloat(
      28,
      f
    );
  }
  f = message.getInspectionStop1();
  if (f !== 0.0) {
    writer.writeFloat(
      29,
      f
    );
  }
  f = message.getInspectionDirection();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getInspectrionName();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getReportDescriptionGeneral();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getReportInspectionType();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getMaterialInspection();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getDimensionInspection();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getInspectionMetodeType();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getSectionCode();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getMedieid();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getMediatype();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getInspektionDamage();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getInspectionStart();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
  f = message.getPhysicalIndex();
  if (f.length > 0) {
    writer.writeString(
      43,
      f
    );
  }
  f = message.getDrawingcode();
  if (f.length > 0) {
    writer.writeString(
      44,
      f
    );
  }
  f = message.getCrosssection();
  if (f.length > 0) {
    writer.writeString(
      45,
      f
    );
  }
  f = message.getProfile();
  if (f.length > 0) {
    writer.writeString(
      46,
      f
    );
  }
  f = message.getAddressid();
  if (f.length > 0) {
    writer.writeString(
      47,
      f
    );
  }
  f = message.getTopointaddess();
  if (f.length > 0) {
    writer.writeString(
      48,
      f
    );
  }
  f = message.getSystemname();
  if (f.length > 0) {
    writer.writeString(
      49,
      f
    );
  }
  f = message.getSystemage();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getSystemdocumentation();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getSystemmedia();
  if (f.length > 0) {
    writer.writeString(
      52,
      f
    );
  }
  f = message.getMaterialeidentified();
  if (f.length > 0) {
    writer.writeString(
      53,
      f
    );
  }
  f = message.getInspectionStop2();
  if (f.length > 0) {
    writer.writeString(
      54,
      f
    );
  }
  f = message.getReporttype();
  if (f.length > 0) {
    writer.writeString(
      55,
      f
    );
  }
  f = message.getInspectionsectionStartpoint();
  if (f.length > 0) {
    writer.writeString(
      56,
      f
    );
  }
  f = message.getInspectionsectionEndpoint();
  if (f.length > 0) {
    writer.writeString(
      57,
      f
    );
  }
  f = message.getInspectionsectionDistance();
  if (f !== 0.0) {
    writer.writeFloat(
      58,
      f
    );
  }
  f = message.getInspectionsectionumber();
  if (f !== 0) {
    writer.writeInt32(
      59,
      f
    );
  }
  f = message.getInspectionlateralclockreference();
  if (f.length > 0) {
    writer.writeString(
      60,
      f
    );
  }
  f = message.getInspectionlateralclockreference6();
  if (f.length > 0) {
    writer.writeString(
      61,
      f
    );
  }
  f = message.getComponentcode();
  if (f.length > 0) {
    writer.writeString(
      62,
      f
    );
  }
  f = message.getPhysicalindexvalue();
  if (f !== 0.0) {
    writer.writeFloat(
      63,
      f
    );
  }
  f = message.getInspectionDamagevalue();
  if (f !== 0.0) {
    writer.writeFloat(
      64,
      f
    );
  }
  f = message.getAmountofplugs();
  if (f !== 0) {
    writer.writeInt32(
      65,
      f
    );
  }
  f = message.getGroup();
  if (f !== 0) {
    writer.writeInt32(
      66,
      f
    );
  }
  f = message.getExcluded();
  if (f) {
    writer.writeBool(
      67,
      f
    );
  }
  f = message.getManholesection();
  if (f) {
    writer.writeBool(
      68,
      f
    );
  }
  f = message.getPreparatorywork();
  if (f) {
    writer.writeBool(
      69,
      f
    );
  }
  f = message.getMilled();
  if (f) {
    writer.writeBool(
      70,
      f
    );
  }
  f = message.getUsercomment();
  if (f.length > 0) {
    writer.writeString(
      71,
      f
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeInt32(
      72,
      f
    );
  }
  f = message.getFrommanholeidOrginal();
  if (f !== 0) {
    writer.writeInt32(
      73,
      f
    );
  }
  f = message.getTomanholeidOrginal();
  if (f !== 0) {
    writer.writeInt32(
      74,
      f
    );
  }
  f = message.getRenovationyear();
  if (f !== 0) {
    writer.writeInt32(
      75,
      f
    );
  }
  f = message.getChoosedeleterow();
  if (f) {
    writer.writeBool(
      76,
      f
    );
  }
  f = message.getSagimportid();
  if (f !== 0) {
    writer.writeInt32(
      77,
      f
    );
  }
  f = message.getSectionuufk();
  if (f !== 0) {
    writer.writeInt32(
      78,
      f
    );
  }
  f = message.getStiktypeid();
  if (f !== 0) {
    writer.writeInt32(
      79,
      f
    );
  }
  f = message.getPrioritetid();
  if (f !== 0) {
    writer.writeInt32(
      80,
      f
    );
  }
  f = message.getRenoveringStatusid();
  if (f !== 0) {
    writer.writeInt32(
      81,
      f
    );
  }
  f = message.getSectionendpointid();
  if (f !== 0) {
    writer.writeInt32(
      82,
      f
    );
  }
};


/**
 * optional int32 SectionId = 1;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getSectionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSectionid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 from = 2;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 to = 3;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 S_ID = 4;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getSId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 sectionNumber = 5;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getSectionnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSectionnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string TV_Operator = 6;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getTvOperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setTvOperator = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Inspection_Date = 7;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionDate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Inspection_City = 8;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionCity = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string Inspection_Address = 9;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string Inspection_Weather = 10;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionWeather = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionWeather = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 Inspection_SectionNumber = 11;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getInspectionSectionnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionSectionnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string Dimension = 12;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getDimension = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setDimension = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string Materiale = 13;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getMateriale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setMateriale = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional float Length_Meter = 14;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getLengthMeter = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setLengthMeter = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional string YearOfEstablishment = 15;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getYearofestablishment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setYearofestablishment = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string Inspektion_ReportNumber = 16;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspektionReportnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspektionReportnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string Report_Description = 17;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getReportDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setReportDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string Inspection_Reason = 18;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionReason = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string Inspektion_CarNumber = 19;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspektionCarnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspektionCarnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string Inspektion_Camera = 20;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspektionCamera = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspektionCamera = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional int32 Assignment_Number = 21;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getAssignmentNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setAssignmentNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int32 VideoNumber = 22;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getVideonumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setVideonumber = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional string Inspection_Cleaned = 23;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionCleaned = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionCleaned = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string ToPointType = 24;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getTopointtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setTopointtype = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string FromPointType = 25;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getFrompointtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setFrompointtype = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional float Inspektion_LengthMeasured = 26;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getInspektionLengthmeasured = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 26, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspektionLengthmeasured = function(value) {
  return jspb.Message.setProto3FloatField(this, 26, value);
};


/**
 * optional string Inspektion_Type = 27;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspektionType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspektionType = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional float Inspection_Difference = 28;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getInspectionDifference = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 28, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionDifference = function(value) {
  return jspb.Message.setProto3FloatField(this, 28, value);
};


/**
 * optional float Inspection_Stop1 = 29;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getInspectionStop1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionStop1 = function(value) {
  return jspb.Message.setProto3FloatField(this, 29, value);
};


/**
 * optional string Inspection_Direction = 30;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionDirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionDirection = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string Inspectrion_Name = 31;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectrionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectrionName = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string Report_Description_General = 32;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getReportDescriptionGeneral = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setReportDescriptionGeneral = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string Status = 33;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string Report_Inspection_Type = 34;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getReportInspectionType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setReportInspectionType = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string Material_Inspection = 35;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getMaterialInspection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setMaterialInspection = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional string Dimension_Inspection = 36;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getDimensionInspection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setDimensionInspection = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string Inspection_Metode_Type = 37;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionMetodeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionMetodeType = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string Section_Code = 38;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getSectionCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSectionCode = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional string MedieID = 39;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getMedieid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setMedieid = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional string MediaType = 40;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getMediatype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setMediatype = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional string Inspektion_Damage = 41;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspektionDamage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspektionDamage = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional string Inspection_Start = 42;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionStart = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionStart = function(value) {
  return jspb.Message.setProto3StringField(this, 42, value);
};


/**
 * optional string Physical_Index = 43;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getPhysicalIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 43, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setPhysicalIndex = function(value) {
  return jspb.Message.setProto3StringField(this, 43, value);
};


/**
 * optional string DrawingCode = 44;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getDrawingcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 44, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setDrawingcode = function(value) {
  return jspb.Message.setProto3StringField(this, 44, value);
};


/**
 * optional string CrossSection = 45;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getCrosssection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 45, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setCrosssection = function(value) {
  return jspb.Message.setProto3StringField(this, 45, value);
};


/**
 * optional string Profile = 46;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getProfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setProfile = function(value) {
  return jspb.Message.setProto3StringField(this, 46, value);
};


/**
 * optional string AddressID = 47;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getAddressid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 47, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setAddressid = function(value) {
  return jspb.Message.setProto3StringField(this, 47, value);
};


/**
 * optional string ToPointAddess = 48;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getTopointaddess = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 48, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setTopointaddess = function(value) {
  return jspb.Message.setProto3StringField(this, 48, value);
};


/**
 * optional string SystemName = 49;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getSystemname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 49, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSystemname = function(value) {
  return jspb.Message.setProto3StringField(this, 49, value);
};


/**
 * optional string SystemAge = 50;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getSystemage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSystemage = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string SystemDocumentation = 51;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getSystemdocumentation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSystemdocumentation = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional string SystemMedia = 52;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getSystemmedia = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSystemmedia = function(value) {
  return jspb.Message.setProto3StringField(this, 52, value);
};


/**
 * optional string MaterialeIdentified = 53;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getMaterialeidentified = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 53, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setMaterialeidentified = function(value) {
  return jspb.Message.setProto3StringField(this, 53, value);
};


/**
 * optional string Inspection_Stop2 = 54;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionStop2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 54, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionStop2 = function(value) {
  return jspb.Message.setProto3StringField(this, 54, value);
};


/**
 * optional string ReportType = 55;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getReporttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 55, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setReporttype = function(value) {
  return jspb.Message.setProto3StringField(this, 55, value);
};


/**
 * optional string InspectionSection_Startpoint = 56;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionsectionStartpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 56, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionsectionStartpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 56, value);
};


/**
 * optional string InspectionSection_Endpoint = 57;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionsectionEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 57, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionsectionEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 57, value);
};


/**
 * optional float InspectionSection_Distance = 58;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getInspectionsectionDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 58, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionsectionDistance = function(value) {
  return jspb.Message.setProto3FloatField(this, 58, value);
};


/**
 * optional int32 InspectionSectioNumber = 59;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getInspectionsectionumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 59, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionsectionumber = function(value) {
  return jspb.Message.setProto3IntField(this, 59, value);
};


/**
 * optional string InspectionLateralClockReference = 60;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionlateralclockreference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 60, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionlateralclockreference = function(value) {
  return jspb.Message.setProto3StringField(this, 60, value);
};


/**
 * optional string InspectionLateralClockReference6 = 61;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getInspectionlateralclockreference6 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 61, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionlateralclockreference6 = function(value) {
  return jspb.Message.setProto3StringField(this, 61, value);
};


/**
 * optional string ComponentCode = 62;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getComponentcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 62, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setComponentcode = function(value) {
  return jspb.Message.setProto3StringField(this, 62, value);
};


/**
 * optional float PhysicalIndexValue = 63;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getPhysicalindexvalue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 63, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setPhysicalindexvalue = function(value) {
  return jspb.Message.setProto3FloatField(this, 63, value);
};


/**
 * optional float Inspection_DamageValue = 64;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getInspectionDamagevalue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 64, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setInspectionDamagevalue = function(value) {
  return jspb.Message.setProto3FloatField(this, 64, value);
};


/**
 * optional int32 AmountOfPlugs = 65;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getAmountofplugs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 65, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setAmountofplugs = function(value) {
  return jspb.Message.setProto3IntField(this, 65, value);
};


/**
 * optional int32 Group = 66;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getGroup = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 66, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setGroup = function(value) {
  return jspb.Message.setProto3IntField(this, 66, value);
};


/**
 * optional bool Excluded = 67;
 * @return {boolean}
 */
proto.SectionPB.SectionObject.prototype.getExcluded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 67, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setExcluded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 67, value);
};


/**
 * optional bool ManholeSection = 68;
 * @return {boolean}
 */
proto.SectionPB.SectionObject.prototype.getManholesection = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 68, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setManholesection = function(value) {
  return jspb.Message.setProto3BooleanField(this, 68, value);
};


/**
 * optional bool PreparatoryWork = 69;
 * @return {boolean}
 */
proto.SectionPB.SectionObject.prototype.getPreparatorywork = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 69, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setPreparatorywork = function(value) {
  return jspb.Message.setProto3BooleanField(this, 69, value);
};


/**
 * optional bool Milled = 70;
 * @return {boolean}
 */
proto.SectionPB.SectionObject.prototype.getMilled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 70, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setMilled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 70, value);
};


/**
 * optional string UserComment = 71;
 * @return {string}
 */
proto.SectionPB.SectionObject.prototype.getUsercomment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 71, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setUsercomment = function(value) {
  return jspb.Message.setProto3StringField(this, 71, value);
};


/**
 * optional int32 Position = 72;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 72, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 72, value);
};


/**
 * optional int32 FromManholeID_Orginal = 73;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getFrommanholeidOrginal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 73, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setFrommanholeidOrginal = function(value) {
  return jspb.Message.setProto3IntField(this, 73, value);
};


/**
 * optional int32 ToManholeID_Orginal = 74;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getTomanholeidOrginal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 74, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setTomanholeidOrginal = function(value) {
  return jspb.Message.setProto3IntField(this, 74, value);
};


/**
 * optional int32 RenovationYear = 75;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getRenovationyear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 75, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setRenovationyear = function(value) {
  return jspb.Message.setProto3IntField(this, 75, value);
};


/**
 * optional bool ChooseDeleteRow = 76;
 * @return {boolean}
 */
proto.SectionPB.SectionObject.prototype.getChoosedeleterow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 76, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setChoosedeleterow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 76, value);
};


/**
 * optional int32 SagImportId = 77;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getSagimportid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 77, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSagimportid = function(value) {
  return jspb.Message.setProto3IntField(this, 77, value);
};


/**
 * optional int32 SectionUUFK = 78;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getSectionuufk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 78, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSectionuufk = function(value) {
  return jspb.Message.setProto3IntField(this, 78, value);
};


/**
 * optional int32 StiktypeId = 79;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getStiktypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 79, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setStiktypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 79, value);
};


/**
 * optional int32 PrioritetId = 80;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getPrioritetid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 80, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setPrioritetid = function(value) {
  return jspb.Message.setProto3IntField(this, 80, value);
};


/**
 * optional int32 Renovering_StatusId = 81;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getRenoveringStatusid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 81, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setRenoveringStatusid = function(value) {
  return jspb.Message.setProto3IntField(this, 81, value);
};


/**
 * optional int32 SectionEndPointID = 82;
 * @return {number}
 */
proto.SectionPB.SectionObject.prototype.getSectionendpointid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 82, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionObject} returns this
 */
proto.SectionPB.SectionObject.prototype.setSectionendpointid = function(value) {
  return jspb.Message.setProto3IntField(this, 82, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SectionPB.SectionFrontObject2.prototype.toObject = function(opt_includeInstance) {
  return proto.SectionPB.SectionFrontObject2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SectionPB.SectionFrontObject2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionFrontObject2.toObject = function(includeInstance, msg) {
  var f, obj = {
    sectionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    from: jspb.Message.getFieldWithDefault(msg, 2, 0),
    to: jspb.Message.getFieldWithDefault(msg, 3, 0),
    sectionnumber: jspb.Message.getFieldWithDefault(msg, 4, 0),
    dimension: jspb.Message.getFieldWithDefault(msg, 5, ""),
    material: jspb.Message.getFieldWithDefault(msg, 6, ""),
    length: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    type: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, ""),
    damage: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    physicalindex: jspb.Message.getFieldWithDefault(msg, 11, ""),
    priority: jspb.Message.getFieldWithDefault(msg, 12, 0),
    sectiontype: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SectionPB.SectionFrontObject2}
 */
proto.SectionPB.SectionFrontObject2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SectionPB.SectionFrontObject2;
  return proto.SectionPB.SectionFrontObject2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SectionPB.SectionFrontObject2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SectionPB.SectionFrontObject2}
 */
proto.SectionPB.SectionFrontObject2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSectionid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSectionnumber(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDimension(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterial(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLength(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDamage(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhysicalindex(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSectiontype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SectionPB.SectionFrontObject2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SectionPB.SectionFrontObject2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SectionPB.SectionFrontObject2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionFrontObject2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSectionid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSectionnumber();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDimension();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMaterial();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLength();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDamage();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getPhysicalindex();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getSectiontype();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional int32 SectionId = 1;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject2.prototype.getSectionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setSectionid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 from = 2;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject2.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 to = 3;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject2.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 sectionNumber = 4;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject2.prototype.getSectionnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setSectionnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string dimension = 5;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject2.prototype.getDimension = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setDimension = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string material = 6;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject2.prototype.getMaterial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setMaterial = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional float length = 7;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject2.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setLength = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string type = 8;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject2.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string status = 9;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject2.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional float damage = 10;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject2.prototype.getDamage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setDamage = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string physicalIndex = 11;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject2.prototype.getPhysicalindex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setPhysicalindex = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 priority = 12;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject2.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string sectionType = 13;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject2.prototype.getSectiontype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject2} returns this
 */
proto.SectionPB.SectionFrontObject2.prototype.setSectiontype = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SectionPB.SectionInformationObject.prototype.toObject = function(opt_includeInstance) {
  return proto.SectionPB.SectionInformationObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SectionPB.SectionInformationObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionInformationObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: jspb.Message.getFieldWithDefault(msg, 1, 0),
    to: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sectionnumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    status: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dimension: jspb.Message.getFieldWithDefault(msg, 5, ""),
    length: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    material: jspb.Message.getFieldWithDefault(msg, 7, ""),
    type: jspb.Message.getFieldWithDefault(msg, 8, ""),
    physicalindex: jspb.Message.getFieldWithDefault(msg, 9, ""),
    damage: jspb.Message.getFieldWithDefault(msg, 10, ""),
    priority: jspb.Message.getFieldWithDefault(msg, 11, 0),
    excluded: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    system: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SectionPB.SectionInformationObject}
 */
proto.SectionPB.SectionInformationObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SectionPB.SectionInformationObject;
  return proto.SectionPB.SectionInformationObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SectionPB.SectionInformationObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SectionPB.SectionInformationObject}
 */
proto.SectionPB.SectionInformationObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSectionnumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDimension(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLength(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterial(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhysicalindex(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDamage(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcluded(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SectionPB.SectionInformationObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SectionPB.SectionInformationObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SectionPB.SectionInformationObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionInformationObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSectionnumber();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDimension();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLength();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getMaterial();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPhysicalindex();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDamage();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getExcluded();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getSystem();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional int32 from = 1;
 * @return {number}
 */
proto.SectionPB.SectionInformationObject.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 to = 2;
 * @return {number}
 */
proto.SectionPB.SectionInformationObject.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 sectionNumber = 3;
 * @return {number}
 */
proto.SectionPB.SectionInformationObject.prototype.getSectionnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setSectionnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string status = 4;
 * @return {string}
 */
proto.SectionPB.SectionInformationObject.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string dimension = 5;
 * @return {string}
 */
proto.SectionPB.SectionInformationObject.prototype.getDimension = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setDimension = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional float length = 6;
 * @return {number}
 */
proto.SectionPB.SectionInformationObject.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setLength = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string material = 7;
 * @return {string}
 */
proto.SectionPB.SectionInformationObject.prototype.getMaterial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setMaterial = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string type = 8;
 * @return {string}
 */
proto.SectionPB.SectionInformationObject.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string physicalIndex = 9;
 * @return {string}
 */
proto.SectionPB.SectionInformationObject.prototype.getPhysicalindex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setPhysicalindex = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string damage = 10;
 * @return {string}
 */
proto.SectionPB.SectionInformationObject.prototype.getDamage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setDamage = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 priority = 11;
 * @return {number}
 */
proto.SectionPB.SectionInformationObject.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bool excluded = 12;
 * @return {boolean}
 */
proto.SectionPB.SectionInformationObject.prototype.getExcluded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setExcluded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string system = 13;
 * @return {string}
 */
proto.SectionPB.SectionInformationObject.prototype.getSystem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionInformationObject} returns this
 */
proto.SectionPB.SectionInformationObject.prototype.setSystem = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SectionPB.SectionFrontObject.prototype.toObject = function(opt_includeInstance) {
  return proto.SectionPB.SectionFrontObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SectionPB.SectionFrontObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionFrontObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    sectionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    from: jspb.Message.getFieldWithDefault(msg, 2, 0),
    to: jspb.Message.getFieldWithDefault(msg, 3, 0),
    sId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    sectionnumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    tvOperator: jspb.Message.getFieldWithDefault(msg, 6, ""),
    inspectionDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    inspectionCity: jspb.Message.getFieldWithDefault(msg, 8, ""),
    inspectionAddress: jspb.Message.getFieldWithDefault(msg, 9, ""),
    inspectionWeather: jspb.Message.getFieldWithDefault(msg, 10, ""),
    inspectionSectionnumber: jspb.Message.getFieldWithDefault(msg, 11, 0),
    dimension: jspb.Message.getFieldWithDefault(msg, 12, ""),
    materiale: jspb.Message.getFieldWithDefault(msg, 13, ""),
    lengthMeter: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    yearofestablishment: jspb.Message.getFieldWithDefault(msg, 15, ""),
    inspektionReportnumber: jspb.Message.getFieldWithDefault(msg, 16, ""),
    reportDescription: jspb.Message.getFieldWithDefault(msg, 17, ""),
    inspectionReason: jspb.Message.getFieldWithDefault(msg, 18, ""),
    inspektionCarnumber: jspb.Message.getFieldWithDefault(msg, 19, ""),
    inspektionCamera: jspb.Message.getFieldWithDefault(msg, 20, ""),
    assignmentNumber: jspb.Message.getFieldWithDefault(msg, 21, 0),
    videonumber: jspb.Message.getFieldWithDefault(msg, 22, 0),
    inspectionCleaned: jspb.Message.getFieldWithDefault(msg, 23, ""),
    topointtype: jspb.Message.getFieldWithDefault(msg, 24, ""),
    frompointtype: jspb.Message.getFieldWithDefault(msg, 25, ""),
    inspektionLengthmeasured: jspb.Message.getFloatingPointFieldWithDefault(msg, 26, 0.0),
    inspektionType: jspb.Message.getFieldWithDefault(msg, 27, ""),
    inspectionDifference: jspb.Message.getFloatingPointFieldWithDefault(msg, 28, 0.0),
    inspectionStop1: jspb.Message.getFloatingPointFieldWithDefault(msg, 29, 0.0),
    inspectionDirection: jspb.Message.getFieldWithDefault(msg, 30, ""),
    inspectrionName: jspb.Message.getFieldWithDefault(msg, 31, ""),
    reportDescriptionGeneral: jspb.Message.getFieldWithDefault(msg, 32, ""),
    status: jspb.Message.getFieldWithDefault(msg, 33, ""),
    reportInspectionType: jspb.Message.getFieldWithDefault(msg, 34, ""),
    materialInspection: jspb.Message.getFieldWithDefault(msg, 35, ""),
    dimensionInspection: jspb.Message.getFieldWithDefault(msg, 36, ""),
    inspectionMetodeType: jspb.Message.getFieldWithDefault(msg, 37, ""),
    sectionCode: jspb.Message.getFieldWithDefault(msg, 38, ""),
    medieid: jspb.Message.getFieldWithDefault(msg, 39, ""),
    mediatype: jspb.Message.getFieldWithDefault(msg, 40, ""),
    inspektionDamage: jspb.Message.getFieldWithDefault(msg, 41, ""),
    inspectionStart: jspb.Message.getFieldWithDefault(msg, 42, ""),
    physicalIndex: jspb.Message.getFieldWithDefault(msg, 43, ""),
    drawingcode: jspb.Message.getFieldWithDefault(msg, 44, ""),
    crosssection: jspb.Message.getFieldWithDefault(msg, 45, ""),
    profile: jspb.Message.getFieldWithDefault(msg, 46, ""),
    addressid: jspb.Message.getFieldWithDefault(msg, 47, ""),
    topointaddess: jspb.Message.getFieldWithDefault(msg, 48, ""),
    systemname: jspb.Message.getFieldWithDefault(msg, 49, ""),
    systemage: jspb.Message.getFieldWithDefault(msg, 50, ""),
    systemdocumentation: jspb.Message.getFieldWithDefault(msg, 51, ""),
    systemmedia: jspb.Message.getFieldWithDefault(msg, 52, ""),
    materialeidentified: jspb.Message.getFieldWithDefault(msg, 53, ""),
    inspectionStop2: jspb.Message.getFieldWithDefault(msg, 54, ""),
    reporttype: jspb.Message.getFieldWithDefault(msg, 55, ""),
    inspectionsectionStartpoint: jspb.Message.getFieldWithDefault(msg, 56, ""),
    inspectionsectionEndpoint: jspb.Message.getFieldWithDefault(msg, 57, ""),
    inspectionsectionDistance: jspb.Message.getFloatingPointFieldWithDefault(msg, 58, 0.0),
    inspectionsectionumber: jspb.Message.getFieldWithDefault(msg, 59, 0),
    inspectionlateralclockreference: jspb.Message.getFieldWithDefault(msg, 60, ""),
    inspectionlateralclockreference6: jspb.Message.getFieldWithDefault(msg, 61, ""),
    componentcode: jspb.Message.getFieldWithDefault(msg, 62, ""),
    physicalindexvalue: jspb.Message.getFloatingPointFieldWithDefault(msg, 63, 0.0),
    inspectionDamagevalue: jspb.Message.getFloatingPointFieldWithDefault(msg, 64, 0.0),
    amountofplugs: jspb.Message.getFieldWithDefault(msg, 65, 0),
    group: jspb.Message.getFieldWithDefault(msg, 66, 0),
    excluded: jspb.Message.getBooleanFieldWithDefault(msg, 67, false),
    manholesection: jspb.Message.getBooleanFieldWithDefault(msg, 68, false),
    preparatorywork: jspb.Message.getBooleanFieldWithDefault(msg, 69, false),
    milled: jspb.Message.getBooleanFieldWithDefault(msg, 70, false),
    usercomment: jspb.Message.getFieldWithDefault(msg, 71, ""),
    position: jspb.Message.getFieldWithDefault(msg, 72, 0),
    frommanholeidOrginal: jspb.Message.getFieldWithDefault(msg, 73, 0),
    tomanholeidOrginal: jspb.Message.getFieldWithDefault(msg, 74, 0),
    renovationyear: jspb.Message.getFieldWithDefault(msg, 75, 0),
    choosedeleterow: jspb.Message.getBooleanFieldWithDefault(msg, 76, false),
    sagimportid: jspb.Message.getFieldWithDefault(msg, 77, 0),
    sectionuufk: jspb.Message.getFieldWithDefault(msg, 78, 0),
    stiktypeid: jspb.Message.getFieldWithDefault(msg, 79, 0),
    prioritetid: jspb.Message.getFieldWithDefault(msg, 80, 0),
    renoveringStatusid: jspb.Message.getFieldWithDefault(msg, 81, 0),
    sectionendpointid: jspb.Message.getFieldWithDefault(msg, 82, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SectionPB.SectionFrontObject}
 */
proto.SectionPB.SectionFrontObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SectionPB.SectionFrontObject;
  return proto.SectionPB.SectionFrontObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SectionPB.SectionFrontObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SectionPB.SectionFrontObject}
 */
proto.SectionPB.SectionFrontObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSectionid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSectionnumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTvOperator(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionDate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionCity(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionAddress(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionWeather(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInspectionSectionnumber(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDimension(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMateriale(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLengthMeter(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setYearofestablishment(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspektionReportnumber(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportDescription(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionReason(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspektionCarnumber(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspektionCamera(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAssignmentNumber(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVideonumber(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionCleaned(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopointtype(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrompointtype(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setInspektionLengthmeasured(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspektionType(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setInspectionDifference(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setInspectionStop1(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionDirection(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectrionName(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportDescriptionGeneral(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportInspectionType(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterialInspection(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setDimensionInspection(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionMetodeType(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setSectionCode(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setMedieid(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediatype(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspektionDamage(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionStart(value);
      break;
    case 43:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhysicalIndex(value);
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.setDrawingcode(value);
      break;
    case 45:
      var value = /** @type {string} */ (reader.readString());
      msg.setCrosssection(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfile(value);
      break;
    case 47:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressid(value);
      break;
    case 48:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopointaddess(value);
      break;
    case 49:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemname(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemage(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemdocumentation(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemmedia(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterialeidentified(value);
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionStop2(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.setReporttype(value);
      break;
    case 56:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionsectionStartpoint(value);
      break;
    case 57:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionsectionEndpoint(value);
      break;
    case 58:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setInspectionsectionDistance(value);
      break;
    case 59:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInspectionsectionumber(value);
      break;
    case 60:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionlateralclockreference(value);
      break;
    case 61:
      var value = /** @type {string} */ (reader.readString());
      msg.setInspectionlateralclockreference6(value);
      break;
    case 62:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentcode(value);
      break;
    case 63:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPhysicalindexvalue(value);
      break;
    case 64:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setInspectionDamagevalue(value);
      break;
    case 65:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountofplugs(value);
      break;
    case 66:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroup(value);
      break;
    case 67:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcluded(value);
      break;
    case 68:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setManholesection(value);
      break;
    case 69:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreparatorywork(value);
      break;
    case 70:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMilled(value);
      break;
    case 71:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsercomment(value);
      break;
    case 72:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosition(value);
      break;
    case 73:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrommanholeidOrginal(value);
      break;
    case 74:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTomanholeidOrginal(value);
      break;
    case 75:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRenovationyear(value);
      break;
    case 76:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChoosedeleterow(value);
      break;
    case 77:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSagimportid(value);
      break;
    case 78:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSectionuufk(value);
      break;
    case 79:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStiktypeid(value);
      break;
    case 80:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrioritetid(value);
      break;
    case 81:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRenoveringStatusid(value);
      break;
    case 82:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSectionendpointid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SectionPB.SectionFrontObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SectionPB.SectionFrontObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SectionPB.SectionFrontObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionFrontObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSectionid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getSectionnumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTvOperator();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getInspectionDate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getInspectionCity();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getInspectionAddress();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getInspectionWeather();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInspectionSectionnumber();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getDimension();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMateriale();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getLengthMeter();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getYearofestablishment();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getInspektionReportnumber();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getReportDescription();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getInspectionReason();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getInspektionCarnumber();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getInspektionCamera();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getAssignmentNumber();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getVideonumber();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getInspectionCleaned();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getTopointtype();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getFrompointtype();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getInspektionLengthmeasured();
  if (f !== 0.0) {
    writer.writeFloat(
      26,
      f
    );
  }
  f = message.getInspektionType();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getInspectionDifference();
  if (f !== 0.0) {
    writer.writeFloat(
      28,
      f
    );
  }
  f = message.getInspectionStop1();
  if (f !== 0.0) {
    writer.writeFloat(
      29,
      f
    );
  }
  f = message.getInspectionDirection();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getInspectrionName();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getReportDescriptionGeneral();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getReportInspectionType();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getMaterialInspection();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getDimensionInspection();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getInspectionMetodeType();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getSectionCode();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getMedieid();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getMediatype();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getInspektionDamage();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getInspectionStart();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
  f = message.getPhysicalIndex();
  if (f.length > 0) {
    writer.writeString(
      43,
      f
    );
  }
  f = message.getDrawingcode();
  if (f.length > 0) {
    writer.writeString(
      44,
      f
    );
  }
  f = message.getCrosssection();
  if (f.length > 0) {
    writer.writeString(
      45,
      f
    );
  }
  f = message.getProfile();
  if (f.length > 0) {
    writer.writeString(
      46,
      f
    );
  }
  f = message.getAddressid();
  if (f.length > 0) {
    writer.writeString(
      47,
      f
    );
  }
  f = message.getTopointaddess();
  if (f.length > 0) {
    writer.writeString(
      48,
      f
    );
  }
  f = message.getSystemname();
  if (f.length > 0) {
    writer.writeString(
      49,
      f
    );
  }
  f = message.getSystemage();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getSystemdocumentation();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getSystemmedia();
  if (f.length > 0) {
    writer.writeString(
      52,
      f
    );
  }
  f = message.getMaterialeidentified();
  if (f.length > 0) {
    writer.writeString(
      53,
      f
    );
  }
  f = message.getInspectionStop2();
  if (f.length > 0) {
    writer.writeString(
      54,
      f
    );
  }
  f = message.getReporttype();
  if (f.length > 0) {
    writer.writeString(
      55,
      f
    );
  }
  f = message.getInspectionsectionStartpoint();
  if (f.length > 0) {
    writer.writeString(
      56,
      f
    );
  }
  f = message.getInspectionsectionEndpoint();
  if (f.length > 0) {
    writer.writeString(
      57,
      f
    );
  }
  f = message.getInspectionsectionDistance();
  if (f !== 0.0) {
    writer.writeFloat(
      58,
      f
    );
  }
  f = message.getInspectionsectionumber();
  if (f !== 0) {
    writer.writeInt32(
      59,
      f
    );
  }
  f = message.getInspectionlateralclockreference();
  if (f.length > 0) {
    writer.writeString(
      60,
      f
    );
  }
  f = message.getInspectionlateralclockreference6();
  if (f.length > 0) {
    writer.writeString(
      61,
      f
    );
  }
  f = message.getComponentcode();
  if (f.length > 0) {
    writer.writeString(
      62,
      f
    );
  }
  f = message.getPhysicalindexvalue();
  if (f !== 0.0) {
    writer.writeFloat(
      63,
      f
    );
  }
  f = message.getInspectionDamagevalue();
  if (f !== 0.0) {
    writer.writeFloat(
      64,
      f
    );
  }
  f = message.getAmountofplugs();
  if (f !== 0) {
    writer.writeInt32(
      65,
      f
    );
  }
  f = message.getGroup();
  if (f !== 0) {
    writer.writeInt32(
      66,
      f
    );
  }
  f = message.getExcluded();
  if (f) {
    writer.writeBool(
      67,
      f
    );
  }
  f = message.getManholesection();
  if (f) {
    writer.writeBool(
      68,
      f
    );
  }
  f = message.getPreparatorywork();
  if (f) {
    writer.writeBool(
      69,
      f
    );
  }
  f = message.getMilled();
  if (f) {
    writer.writeBool(
      70,
      f
    );
  }
  f = message.getUsercomment();
  if (f.length > 0) {
    writer.writeString(
      71,
      f
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeInt32(
      72,
      f
    );
  }
  f = message.getFrommanholeidOrginal();
  if (f !== 0) {
    writer.writeInt32(
      73,
      f
    );
  }
  f = message.getTomanholeidOrginal();
  if (f !== 0) {
    writer.writeInt32(
      74,
      f
    );
  }
  f = message.getRenovationyear();
  if (f !== 0) {
    writer.writeInt32(
      75,
      f
    );
  }
  f = message.getChoosedeleterow();
  if (f) {
    writer.writeBool(
      76,
      f
    );
  }
  f = message.getSagimportid();
  if (f !== 0) {
    writer.writeInt32(
      77,
      f
    );
  }
  f = message.getSectionuufk();
  if (f !== 0) {
    writer.writeInt32(
      78,
      f
    );
  }
  f = message.getStiktypeid();
  if (f !== 0) {
    writer.writeInt32(
      79,
      f
    );
  }
  f = message.getPrioritetid();
  if (f !== 0) {
    writer.writeInt32(
      80,
      f
    );
  }
  f = message.getRenoveringStatusid();
  if (f !== 0) {
    writer.writeInt32(
      81,
      f
    );
  }
  f = message.getSectionendpointid();
  if (f !== 0) {
    writer.writeInt32(
      82,
      f
    );
  }
};


/**
 * optional int32 SectionId = 1;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getSectionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setSectionid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 from = 2;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 to = 3;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 S_ID = 4;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getSId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setSId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 sectionNumber = 5;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getSectionnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setSectionnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string TV_Operator = 6;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getTvOperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setTvOperator = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Inspection_Date = 7;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionDate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Inspection_City = 8;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionCity = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string Inspection_Address = 9;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string Inspection_Weather = 10;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionWeather = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionWeather = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 Inspection_SectionNumber = 11;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionSectionnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionSectionnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string Dimension = 12;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getDimension = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setDimension = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string Materiale = 13;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getMateriale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setMateriale = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional float Length_Meter = 14;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getLengthMeter = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setLengthMeter = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional string YearOfEstablishment = 15;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getYearofestablishment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setYearofestablishment = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string Inspektion_ReportNumber = 16;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspektionReportnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspektionReportnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string Report_Description = 17;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getReportDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setReportDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string Inspection_Reason = 18;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionReason = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string Inspektion_CarNumber = 19;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspektionCarnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspektionCarnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string Inspektion_Camera = 20;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspektionCamera = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspektionCamera = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional int32 Assignment_Number = 21;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getAssignmentNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setAssignmentNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int32 VideoNumber = 22;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getVideonumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setVideonumber = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional string Inspection_Cleaned = 23;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionCleaned = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionCleaned = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string ToPointType = 24;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getTopointtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setTopointtype = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string FromPointType = 25;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getFrompointtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setFrompointtype = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional float Inspektion_LengthMeasured = 26;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspektionLengthmeasured = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 26, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspektionLengthmeasured = function(value) {
  return jspb.Message.setProto3FloatField(this, 26, value);
};


/**
 * optional string Inspektion_Type = 27;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspektionType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspektionType = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional float Inspection_Difference = 28;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionDifference = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 28, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionDifference = function(value) {
  return jspb.Message.setProto3FloatField(this, 28, value);
};


/**
 * optional float Inspection_Stop1 = 29;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionStop1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionStop1 = function(value) {
  return jspb.Message.setProto3FloatField(this, 29, value);
};


/**
 * optional string Inspection_Direction = 30;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionDirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionDirection = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string Inspectrion_Name = 31;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectrionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectrionName = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string Report_Description_General = 32;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getReportDescriptionGeneral = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setReportDescriptionGeneral = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string Status = 33;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string Report_Inspection_Type = 34;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getReportInspectionType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setReportInspectionType = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string Material_Inspection = 35;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getMaterialInspection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setMaterialInspection = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional string Dimension_Inspection = 36;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getDimensionInspection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setDimensionInspection = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string Inspection_Metode_Type = 37;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionMetodeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionMetodeType = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string Section_Code = 38;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getSectionCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setSectionCode = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional string MedieID = 39;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getMedieid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setMedieid = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional string MediaType = 40;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getMediatype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setMediatype = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional string Inspektion_Damage = 41;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspektionDamage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspektionDamage = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional string Inspection_Start = 42;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionStart = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionStart = function(value) {
  return jspb.Message.setProto3StringField(this, 42, value);
};


/**
 * optional string Physical_Index = 43;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getPhysicalIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 43, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setPhysicalIndex = function(value) {
  return jspb.Message.setProto3StringField(this, 43, value);
};


/**
 * optional string DrawingCode = 44;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getDrawingcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 44, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setDrawingcode = function(value) {
  return jspb.Message.setProto3StringField(this, 44, value);
};


/**
 * optional string CrossSection = 45;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getCrosssection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 45, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setCrosssection = function(value) {
  return jspb.Message.setProto3StringField(this, 45, value);
};


/**
 * optional string Profile = 46;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getProfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setProfile = function(value) {
  return jspb.Message.setProto3StringField(this, 46, value);
};


/**
 * optional string AddressID = 47;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getAddressid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 47, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setAddressid = function(value) {
  return jspb.Message.setProto3StringField(this, 47, value);
};


/**
 * optional string ToPointAddess = 48;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getTopointaddess = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 48, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setTopointaddess = function(value) {
  return jspb.Message.setProto3StringField(this, 48, value);
};


/**
 * optional string SystemName = 49;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getSystemname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 49, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setSystemname = function(value) {
  return jspb.Message.setProto3StringField(this, 49, value);
};


/**
 * optional string SystemAge = 50;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getSystemage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setSystemage = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string SystemDocumentation = 51;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getSystemdocumentation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setSystemdocumentation = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional string SystemMedia = 52;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getSystemmedia = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setSystemmedia = function(value) {
  return jspb.Message.setProto3StringField(this, 52, value);
};


/**
 * optional string MaterialeIdentified = 53;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getMaterialeidentified = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 53, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setMaterialeidentified = function(value) {
  return jspb.Message.setProto3StringField(this, 53, value);
};


/**
 * optional string Inspection_Stop2 = 54;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionStop2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 54, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionStop2 = function(value) {
  return jspb.Message.setProto3StringField(this, 54, value);
};


/**
 * optional string ReportType = 55;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getReporttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 55, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setReporttype = function(value) {
  return jspb.Message.setProto3StringField(this, 55, value);
};


/**
 * optional string InspectionSection_Startpoint = 56;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionsectionStartpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 56, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionsectionStartpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 56, value);
};


/**
 * optional string InspectionSection_Endpoint = 57;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionsectionEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 57, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionsectionEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 57, value);
};


/**
 * optional float InspectionSection_Distance = 58;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionsectionDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 58, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionsectionDistance = function(value) {
  return jspb.Message.setProto3FloatField(this, 58, value);
};


/**
 * optional int32 InspectionSectioNumber = 59;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionsectionumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 59, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionsectionumber = function(value) {
  return jspb.Message.setProto3IntField(this, 59, value);
};


/**
 * optional string InspectionLateralClockReference = 60;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionlateralclockreference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 60, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionlateralclockreference = function(value) {
  return jspb.Message.setProto3StringField(this, 60, value);
};


/**
 * optional string InspectionLateralClockReference6 = 61;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionlateralclockreference6 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 61, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionlateralclockreference6 = function(value) {
  return jspb.Message.setProto3StringField(this, 61, value);
};


/**
 * optional string ComponentCode = 62;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getComponentcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 62, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setComponentcode = function(value) {
  return jspb.Message.setProto3StringField(this, 62, value);
};


/**
 * optional float PhysicalIndexValue = 63;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getPhysicalindexvalue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 63, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setPhysicalindexvalue = function(value) {
  return jspb.Message.setProto3FloatField(this, 63, value);
};


/**
 * optional float Inspection_DamageValue = 64;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getInspectionDamagevalue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 64, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setInspectionDamagevalue = function(value) {
  return jspb.Message.setProto3FloatField(this, 64, value);
};


/**
 * optional int32 AmountOfPlugs = 65;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getAmountofplugs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 65, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setAmountofplugs = function(value) {
  return jspb.Message.setProto3IntField(this, 65, value);
};


/**
 * optional int32 Group = 66;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getGroup = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 66, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setGroup = function(value) {
  return jspb.Message.setProto3IntField(this, 66, value);
};


/**
 * optional bool Excluded = 67;
 * @return {boolean}
 */
proto.SectionPB.SectionFrontObject.prototype.getExcluded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 67, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setExcluded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 67, value);
};


/**
 * optional bool ManholeSection = 68;
 * @return {boolean}
 */
proto.SectionPB.SectionFrontObject.prototype.getManholesection = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 68, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setManholesection = function(value) {
  return jspb.Message.setProto3BooleanField(this, 68, value);
};


/**
 * optional bool PreparatoryWork = 69;
 * @return {boolean}
 */
proto.SectionPB.SectionFrontObject.prototype.getPreparatorywork = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 69, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setPreparatorywork = function(value) {
  return jspb.Message.setProto3BooleanField(this, 69, value);
};


/**
 * optional bool Milled = 70;
 * @return {boolean}
 */
proto.SectionPB.SectionFrontObject.prototype.getMilled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 70, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setMilled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 70, value);
};


/**
 * optional string UserComment = 71;
 * @return {string}
 */
proto.SectionPB.SectionFrontObject.prototype.getUsercomment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 71, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setUsercomment = function(value) {
  return jspb.Message.setProto3StringField(this, 71, value);
};


/**
 * optional int32 Position = 72;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 72, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 72, value);
};


/**
 * optional int32 FromManholeID_Orginal = 73;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getFrommanholeidOrginal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 73, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setFrommanholeidOrginal = function(value) {
  return jspb.Message.setProto3IntField(this, 73, value);
};


/**
 * optional int32 ToManholeID_Orginal = 74;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getTomanholeidOrginal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 74, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setTomanholeidOrginal = function(value) {
  return jspb.Message.setProto3IntField(this, 74, value);
};


/**
 * optional int32 RenovationYear = 75;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getRenovationyear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 75, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setRenovationyear = function(value) {
  return jspb.Message.setProto3IntField(this, 75, value);
};


/**
 * optional bool ChooseDeleteRow = 76;
 * @return {boolean}
 */
proto.SectionPB.SectionFrontObject.prototype.getChoosedeleterow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 76, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setChoosedeleterow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 76, value);
};


/**
 * optional int32 SagImportId = 77;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getSagimportid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 77, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setSagimportid = function(value) {
  return jspb.Message.setProto3IntField(this, 77, value);
};


/**
 * optional int32 SectionUUFK = 78;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getSectionuufk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 78, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setSectionuufk = function(value) {
  return jspb.Message.setProto3IntField(this, 78, value);
};


/**
 * optional int32 StiktypeId = 79;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getStiktypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 79, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setStiktypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 79, value);
};


/**
 * optional int32 PrioritetId = 80;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getPrioritetid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 80, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setPrioritetid = function(value) {
  return jspb.Message.setProto3IntField(this, 80, value);
};


/**
 * optional int32 Renovering_StatusId = 81;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getRenoveringStatusid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 81, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setRenoveringStatusid = function(value) {
  return jspb.Message.setProto3IntField(this, 81, value);
};


/**
 * optional int32 SectionEndPointID = 82;
 * @return {number}
 */
proto.SectionPB.SectionFrontObject.prototype.getSectionendpointid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 82, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.SectionFrontObject} returns this
 */
proto.SectionPB.SectionFrontObject.prototype.setSectionendpointid = function(value) {
  return jspb.Message.setProto3IntField(this, 82, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SectionPB.SectionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SectionPB.SectionList.prototype.toObject = function(opt_includeInstance) {
  return proto.SectionPB.SectionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SectionPB.SectionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    sectionsList: jspb.Message.toObjectList(msg.getSectionsList(),
    proto.SectionPB.SectionObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SectionPB.SectionList}
 */
proto.SectionPB.SectionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SectionPB.SectionList;
  return proto.SectionPB.SectionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SectionPB.SectionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SectionPB.SectionList}
 */
proto.SectionPB.SectionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SectionPB.SectionObject;
      reader.readMessage(value,proto.SectionPB.SectionObject.deserializeBinaryFromReader);
      msg.addSections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SectionPB.SectionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SectionPB.SectionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SectionPB.SectionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SectionPB.SectionObject.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SectionObject sections = 1;
 * @return {!Array<!proto.SectionPB.SectionObject>}
 */
proto.SectionPB.SectionList.prototype.getSectionsList = function() {
  return /** @type{!Array<!proto.SectionPB.SectionObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SectionPB.SectionObject, 1));
};


/**
 * @param {!Array<!proto.SectionPB.SectionObject>} value
 * @return {!proto.SectionPB.SectionList} returns this
*/
proto.SectionPB.SectionList.prototype.setSectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SectionPB.SectionObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SectionPB.SectionObject}
 */
proto.SectionPB.SectionList.prototype.addSections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SectionPB.SectionObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SectionPB.SectionList} returns this
 */
proto.SectionPB.SectionList.prototype.clearSectionsList = function() {
  return this.setSectionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SectionPB.SectionInformationList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SectionPB.SectionInformationList.prototype.toObject = function(opt_includeInstance) {
  return proto.SectionPB.SectionInformationList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SectionPB.SectionInformationList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionInformationList.toObject = function(includeInstance, msg) {
  var f, obj = {
    infosectionsList: jspb.Message.toObjectList(msg.getInfosectionsList(),
    proto.SectionPB.SectionInformationObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SectionPB.SectionInformationList}
 */
proto.SectionPB.SectionInformationList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SectionPB.SectionInformationList;
  return proto.SectionPB.SectionInformationList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SectionPB.SectionInformationList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SectionPB.SectionInformationList}
 */
proto.SectionPB.SectionInformationList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SectionPB.SectionInformationObject;
      reader.readMessage(value,proto.SectionPB.SectionInformationObject.deserializeBinaryFromReader);
      msg.addInfosections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SectionPB.SectionInformationList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SectionPB.SectionInformationList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SectionPB.SectionInformationList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionInformationList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfosectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SectionPB.SectionInformationObject.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SectionInformationObject InfoSections = 1;
 * @return {!Array<!proto.SectionPB.SectionInformationObject>}
 */
proto.SectionPB.SectionInformationList.prototype.getInfosectionsList = function() {
  return /** @type{!Array<!proto.SectionPB.SectionInformationObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SectionPB.SectionInformationObject, 1));
};


/**
 * @param {!Array<!proto.SectionPB.SectionInformationObject>} value
 * @return {!proto.SectionPB.SectionInformationList} returns this
*/
proto.SectionPB.SectionInformationList.prototype.setInfosectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SectionPB.SectionInformationObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SectionPB.SectionInformationObject}
 */
proto.SectionPB.SectionInformationList.prototype.addInfosections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SectionPB.SectionInformationObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SectionPB.SectionInformationList} returns this
 */
proto.SectionPB.SectionInformationList.prototype.clearInfosectionsList = function() {
  return this.setInfosectionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SectionPB.SectionFrontList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SectionPB.SectionFrontList.prototype.toObject = function(opt_includeInstance) {
  return proto.SectionPB.SectionFrontList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SectionPB.SectionFrontList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionFrontList.toObject = function(includeInstance, msg) {
  var f, obj = {
    frontsectionsList: jspb.Message.toObjectList(msg.getFrontsectionsList(),
    proto.SectionPB.SectionFrontObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SectionPB.SectionFrontList}
 */
proto.SectionPB.SectionFrontList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SectionPB.SectionFrontList;
  return proto.SectionPB.SectionFrontList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SectionPB.SectionFrontList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SectionPB.SectionFrontList}
 */
proto.SectionPB.SectionFrontList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SectionPB.SectionFrontObject;
      reader.readMessage(value,proto.SectionPB.SectionFrontObject.deserializeBinaryFromReader);
      msg.addFrontsections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SectionPB.SectionFrontList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SectionPB.SectionFrontList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SectionPB.SectionFrontList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.SectionFrontList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrontsectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SectionPB.SectionFrontObject.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SectionFrontObject Frontsections = 1;
 * @return {!Array<!proto.SectionPB.SectionFrontObject>}
 */
proto.SectionPB.SectionFrontList.prototype.getFrontsectionsList = function() {
  return /** @type{!Array<!proto.SectionPB.SectionFrontObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SectionPB.SectionFrontObject, 1));
};


/**
 * @param {!Array<!proto.SectionPB.SectionFrontObject>} value
 * @return {!proto.SectionPB.SectionFrontList} returns this
*/
proto.SectionPB.SectionFrontList.prototype.setFrontsectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SectionPB.SectionFrontObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SectionPB.SectionFrontObject}
 */
proto.SectionPB.SectionFrontList.prototype.addFrontsections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SectionPB.SectionFrontObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SectionPB.SectionFrontList} returns this
 */
proto.SectionPB.SectionFrontList.prototype.clearFrontsectionsList = function() {
  return this.setFrontsectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SectionPB.StatusRepley.prototype.toObject = function(opt_includeInstance) {
  return proto.SectionPB.StatusRepley.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SectionPB.StatusRepley} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.StatusRepley.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    command: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SectionPB.StatusRepley}
 */
proto.SectionPB.StatusRepley.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SectionPB.StatusRepley;
  return proto.SectionPB.StatusRepley.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SectionPB.StatusRepley} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SectionPB.StatusRepley}
 */
proto.SectionPB.StatusRepley.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SectionPB.StatusRepley.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SectionPB.StatusRepley.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SectionPB.StatusRepley} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SectionPB.StatusRepley.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommand();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.SectionPB.StatusRepley.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SectionPB.StatusRepley} returns this
 */
proto.SectionPB.StatusRepley.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 command = 2;
 * @return {number}
 */
proto.SectionPB.StatusRepley.prototype.getCommand = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SectionPB.StatusRepley} returns this
 */
proto.SectionPB.StatusRepley.prototype.setCommand = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.SectionPB);
